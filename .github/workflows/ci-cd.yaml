name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Cleanup old deploy folders on droplet
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            sudo rm -rf /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new
            sudo rm -rf /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-old

      - name: Prepare deploy directory
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Remove any stale folder (including root‐owned leftovers)
            sudo rm -rf /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new
            # Recreate and own it as the deployer user
            mkdir -p /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new
            sudo chown -R ${{ secrets.DROPLET_USER }}:${{ secrets.DROPLET_USER }} \
              /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new
            sudo chmod -R 755 /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new


      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest

      - name: Build & push frontend image
        run: |
          docker build --build-arg VITE_API_URL="/api" \
            -t ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest

      - name: Copy compose.yaml to droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "compose.yaml"
          target: "/home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new/"

      - name: Create .env.prod on droplet
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            mkdir -p /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new/backend
            echo "${{ secrets.BACKEND_ENV }}" \
              > /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new/backend/.env.prod
            chmod 600 /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new/backend/.env.prod

      - name: Create firebase-config.json on droplet
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            BASE=/home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new/firebase
            # remove any file or dir named firebase-config.json
            sudo rm -rf $BASE/firebase-config.json
            # ensure the firebase directory exists
            sudo mkdir -p $BASE
            # write the JSON into the file via tee (preserves newlines)
            cat <<EOF | sudo tee $BASE/firebase-config.json >/dev/null
            ${{ secrets.FIREBASE_CONFIG }}
            EOF
            # lock it down
            sudo chmod 600 $BASE/firebase-config.json



      - name: SSH into droplet and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new
            # Ensure fresh pull + recreate
            sudo docker compose up -d \
              --pull always \
              --force-recreate \
              --remove-orphans
            # Rotate symlinks
            mv /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-current \
               /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-old || true
            mv /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-new \
               /home/${{ secrets.DROPLET_USER }}/todo-3000-monorepo-current